use onca_common::prelude::*;
use onca_ral::{Format, VertexFormat};
use ash::vk;




// RAL to vulkan type mapping
// R10G10B10A2 is lowest bit to higest, vulkan formats are highest to lowest, i.e A2B10G10R10
// R11G11B10   is lowest bit to higest, vulkan formats are highest to lowest, i.e B10G11R11
// R9G9B9E5    is lowest bit to higest, vulkan formats are highest to lowest, i.e E5B9G9R9
//
// `Typeless` formats don't map to a valid format, but is handled in relevant code paths
pub(crate) const VULKAN_FORMATS : [vk::Format; Format::COUNT] = [
    /* R32G32B32A32Typeless           */ vk::Format::UNDEFINED,
    /* R32G32B32A32SFloat             */ vk::Format::R32G32B32A32_SFLOAT,
    /* R32G32B32A32Uint               */ vk::Format::R32G32B32A32_UINT,
    /* R32G32B32A32SInt               */ vk::Format::R32G32B32A32_SINT,
    /* R32G32Typeless                 */ vk::Format::UNDEFINED,
    /* R32G32SFloat                   */ vk::Format::R32G32_SFLOAT,
    /* R32G32Uint                     */ vk::Format::R32G32_UINT,
    /* R32G32SInt                     */ vk::Format::R32G32_SINT,
    /* R32Typeless                    */ vk::Format::UNDEFINED,
    /* R32SFloat                      */ vk::Format::R32_SFLOAT,
    /* R32Uint                        */ vk::Format::R32_UINT,
    /* R32SInt                        */ vk::Format::R32_SINT,
    /* R16G16B16A16Typeless           */ vk::Format::UNDEFINED,
    /* R16G16B16A16SFloat             */ vk::Format::R16G16B16A16_SFLOAT,
    /* R16G16B16A16Uint               */ vk::Format::R16G16B16A16_UINT,
    /* R16G16B16A16SInt               */ vk::Format::R16G16B16A16_SINT,
    /* R16G16B16A16UNorm              */ vk::Format::R16G16B16A16_UNORM,
    /* R16G16B16A16SNorm              */ vk::Format::R16G16B16A16_SNORM,
    /* R16G16Typeless                 */ vk::Format::UNDEFINED,
    /* R16G16SFloat                   */ vk::Format::R16G16_SFLOAT,
    /* R16G16Uint                     */ vk::Format::R16G16_UINT,
    /* R16G16SInt                     */ vk::Format::R16G16_SINT,
    /* R16G16UNorm                    */ vk::Format::R16G16_UNORM,
    /* R16G16SNorm                    */ vk::Format::R16G16_SNORM,
    /* R16Typeless                    */ vk::Format::UNDEFINED,
    /* R16SFloat                      */ vk::Format::R16_SFLOAT,
    /* R16Uint                        */ vk::Format::R16_UINT,
    /* R16SInt                        */ vk::Format::R16_SINT,
    /* R16UNorm                       */ vk::Format::R16_UNORM,
    /* R16SNorm                       */ vk::Format::R16_SNORM,
    /* R8G8B8A8Typeless               */ vk::Format::UNDEFINED,
    /* R8G8B8A8Uint                   */ vk::Format::R8G8B8A8_UINT,
    /* R8G8B8A8SInt                   */ vk::Format::R8G8B8A8_SINT,
    /* R8G8B8A8UNorm                  */ vk::Format::R8G8B8A8_UNORM,
    /* R8G8B8A8SNorm                  */ vk::Format::R8G8B8A8_SNORM,
    /* R8G8B8A8Srgb                   */ vk::Format::R8G8B8A8_SRGB,
    /* R8G8Typeless                   */ vk::Format::UNDEFINED,
    /* R8G8Uint                       */ vk::Format::R8G8_UINT,
    /* R8G8SInt                       */ vk::Format::R8G8_SINT,
    /* R8G8UNorm                      */ vk::Format::R8G8_UNORM,
    /* R8G8SNorm                      */ vk::Format::R8G8_SNORM,
    /* R8Typeless                     */ vk::Format::UNDEFINED,
    /* R8Uint                         */ vk::Format::R8_UINT,
    /* R8SInt                         */ vk::Format::R8_SINT,
    /* R8UNorm                        */ vk::Format::R8_UNORM,
    /* R8SNorm                        */ vk::Format::R8_SNORM,
    /* B8G8R8A8Typeless               */ vk::Format::UNDEFINED,
    /* B8G8R8A8UNorm                  */ vk::Format::B8G8R8A8_UNORM,
    /* B8G8R8A8Srgb                   */ vk::Format::B8G8R8A8_SRGB,
    /* R10G10B10A2Typeless            */ vk::Format::UNDEFINED,
    /* R10G10B10A2UInt                */ vk::Format::A2B10G10R10_UINT_PACK32,
    /* R10G10B10A2UNorm               */ vk::Format::A2B10G10R10_UNORM_PACK32,
    /* R11G11B10UFloat                */ vk::Format::B10G11R11_UFLOAT_PACK32,
    /* R9G9B9E5UFloat                 */ vk::Format::E5B9G9R9_UFLOAT_PACK32,
    /* D32SFloat                      */ vk::Format::D32_SFLOAT,
    /* D32SFloatS8UInt                */ vk::Format::D32_SFLOAT_S8_UINT,
    /* S8UInt                         */ vk::Format::S8_UINT,
    /* BC1Typeless                    */ vk::Format::UNDEFINED,
    /* BC1UNorm                       */ vk::Format::BC1_RGBA_UNORM_BLOCK,
    /* BC1Srgb                        */ vk::Format::BC1_RGBA_SRGB_BLOCK,
    /* BC2Typeless                    */ vk::Format::UNDEFINED,
    /* BC2UNorm                       */ vk::Format::BC2_UNORM_BLOCK,
    /* BC2Srgb                        */ vk::Format::BC2_SRGB_BLOCK,
    /* BC3Typeless                    */ vk::Format::UNDEFINED,
    /* BC3UNorm                       */ vk::Format::BC3_UNORM_BLOCK,
    /* BC3Srgb                        */ vk::Format::BC3_SRGB_BLOCK,
    /* BC4Typeless                    */ vk::Format::UNDEFINED,
    /* BC4UNorm                       */ vk::Format::BC4_UNORM_BLOCK,
    /* BC4SNorm                       */ vk::Format::BC4_SNORM_BLOCK,
    /* BC5Typeless                    */ vk::Format::UNDEFINED,
    /* BC5UNorm                       */ vk::Format::BC5_UNORM_BLOCK,
    /* BC5SNorm                       */ vk::Format::BC5_SNORM_BLOCK,
    /* BC6HTypeless                   */ vk::Format::UNDEFINED,
    /* BC6HSFloat                     */ vk::Format::BC6H_SFLOAT_BLOCK,
    /* BC6HUFloat                     */ vk::Format::BC6H_UFLOAT_BLOCK,
    /* BC7Typeless                    */ vk::Format::UNDEFINED,
    /* BC7UNorm                       */ vk::Format::BC7_UNORM_BLOCK,
    /* BC7Srgb                        */ vk::Format::BC7_SRGB_BLOCK,
    /* SamplerFeedbackMinMipOpaque    */ vk::Format::UNDEFINED,
    /* SamplerFeedbackMipRegionOpaque */ vk::Format::UNDEFINED,
];

pub(crate) const VULKAN_VERTEX_FORMATS : [vk::Format; VertexFormat::COUNT] = [
    /* X32Y32Z32W32SFloat  */ vk::Format::R32G32B32A32_SFLOAT,
    /* X32Y32Z32W32SInt    */ vk::Format::R32G32B32A32_SINT,
    /* X32Y32Z32W32UInt    */ vk::Format::R32G32B32A32_UINT,
    /* X32Y32Z32SFloat     */ vk::Format::R32G32B32_SFLOAT,
    /* X32Y32Z32SInt       */ vk::Format::R32G32B32_SINT,
    /* X32Y32Z32UInt       */ vk::Format::R32G32B32_UINT,
    /* X32Y32SFloat        */ vk::Format::R32G32_SFLOAT,
    /* X32Y32SInt          */ vk::Format::R32G32_SINT,
    /* X32Y32UInt          */ vk::Format::R32G32_UINT,
    /* X32SFloat           */ vk::Format::R32_SFLOAT,
    /* X32SInt             */ vk::Format::R32_SINT,
    /* X32UInt             */ vk::Format::R32_UINT,
    /* X16Y16Z16W16SFloat  */ vk::Format::R16G16B16A16_SFLOAT,
    /* X16Y16Z16W16SInt    */ vk::Format::R16G16B16A16_SINT,
    /* X16Y16Z16W16UInt    */ vk::Format::R16G16B16A16_UINT,
    /* X16Y16Z16W16SNorm   */ vk::Format::R16G16B16A16_SNORM,
    /* X16Y16Z16W16UNorm   */ vk::Format::R16G16B16A16_UNORM,
    /* X16Y16SFloat        */ vk::Format::R16G16_SFLOAT,
    /* X16Y16SInt          */ vk::Format::R16G16_SINT,
    /* X16Y16UInt          */ vk::Format::R16G16_UINT,
    /* X16Y16SNorm         */ vk::Format::R16G16_SNORM,
    /* X16Y16UNorm         */ vk::Format::R16G16_UNORM,
    /* X16SFloat           */ vk::Format::R16_SFLOAT,
    /* X16SInt             */ vk::Format::R16_SINT,
    /* X16UInt             */ vk::Format::R16_UINT,
    /* X16SNorm            */ vk::Format::R16_SNORM,
    /* X16UNorm            */ vk::Format::R16_UNORM,
    /* X8Y8Z8W8SInt        */ vk::Format::R8G8B8A8_SINT,
    /* X8Y8Z8W8UInt        */ vk::Format::R8G8B8A8_UINT,
    /* X8Y8Z8W8SNorm       */ vk::Format::R8G8B8A8_SNORM,
    /* X8Y8Z8W8UNorm       */ vk::Format::R8G8B8A8_UNORM,
    /* X8Y8SInt            */ vk::Format::R8G8_SINT,
    /* X8Y8UInt            */ vk::Format::R8G8_UINT,
    /* X8Y8SNorm           */ vk::Format::R8G8_SNORM,
    /* X8Y8UNorm           */ vk::Format::R8G8_UNORM,
    /* X8SInt              */ vk::Format::R8_SINT,
    /* X8UInt              */ vk::Format::R8_UINT,
    /* X8SNorm             */ vk::Format::R8_SNORM,
    /* X8UNorm             */ vk::Format::R8_UNORM,
    /* X10Y10Z10W2UInt     */ vk::Format::A2B10G10R10_UINT_PACK32,
    /* X10Y10Z10W2UNorm    */ vk::Format::A2B10G10R10_UNORM_PACK32,
    /* X11Y11Z10UFloat,    */ vk::Format::B10G11R11_UFLOAT_PACK32,
];